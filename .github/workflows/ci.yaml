name: CI
on:
    push:
        branches: '**'
        tags: 'v*.*.*'
    pull_request:
        branches: '**'
jobs:
    Test:
        environment: Development
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: '18'
            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-
            - name: Cache Docker layers
              uses: actions/cache@v3
              with:
                  path: /tmp/.buildx-cache
                  key: ${{ runner.os }}-buildx-${{ github.sha }}
                  restore-keys: |
                      ${{ runner.os }}-buildx-
            - name: Install nodejs packages
              run: |
                  node -v
                  npm i -g newman
                  npm --prefix ./api ci ./api
            - name: Create env file
              env:
                  BCRYPT_SALT_ROUNDS: ${{ secrets.BCRYPT_SALT_ROUNDS }}
                  JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
                  REFRESH_SECRET_KEY: ${{ secrets.REFRESH_SECRET_KEY }}
              run: |
                  touch api/.env
                  echo BCRYPT_SALT_ROUNDS="$BCRYPT_SALT_ROUNDS" >> api/.env
                  echo JWT_SECRET_KEY="$JWT_SECRET_KEY" >> api/.env
                  echo REFRESH_SECRET_KEY="$REFRESH_SECRET_KEY" >> api/.env
                  cat api/.env
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            - name: Build the API image
              uses: docker/build-push-action@v3
              with:
                  tags: 4rgc/trellzo-backend-api:dev
                  file: Dockerfile.api-dev
                  load: true
                  cache-from: type=local,src=/tmp/.buildx-cache
                  cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
            - name: Build the Mongo image
              uses: docker/build-push-action@v3
              with:
                  tags: 4rgc/trellzo-backend-mongo:dev
                  file: ./mongo/Dockerfile.dev
                  load: true
                  cache-from: type=local,src=/tmp/.buildx-cache
                  cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
            - # Temp fix
              # https://github.com/docker/build-push-action/issues/252
              # https://github.com/moby/buildkit/issues/1896
              name: Move cache
              run: |
                  rm -rf /tmp/.buildx-cache
                  mv /tmp/.buildx-cache-new /tmp/.buildx-cache
            - name: Build the stack
              run: docker-compose up -d
            - name: Sleep for 10s
              run: sleep 10s
            - name: API smoke test
              run: |
                  docker container ls -a
                  docker exec api ping 192.168.2.3 -c 4
                  docker run --network trellzo-backend_def appropriate/curl --retry 6 --retry-connrefused http://192.168.2.3:8080
            - name: API Test
              run: |
                  npx newman -v
                  npx newman run -d api/postman-test-data.json api/Trellzo.postman_collection.json
            - name: Final smoke test
              if: always()
              run: |
                  docker container ls -a
                  docker exec api ping 192.168.2.3 -c 8
            - name: Print API logs on failure
              if: ${{ failure() }}
              run: |
                  docker container logs api
            - name: Print Mongo logs on failure
              if: ${{ failure() }}
              run: |
                  docker container logs mongo
            - name: Print mongodb-seed logs on failure
              if: ${{ failure() }}
              run: |
                  docker container logs mongodb-seed
